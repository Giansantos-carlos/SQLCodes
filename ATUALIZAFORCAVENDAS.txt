SET NOCOUNT ON

	 TRUNCATE TABLE ionv_sync.IONV_VENDEDOR_PERFORMACE;  

	 SELECT DISTINCT CODTIPOPER into #TOP_VENDA FROM SANKHYA.TGFTOP WHERE CODTIPOPER IN (3208, 3217, 3214, 3210, 3213, 30, 3200, 3212, 3216, 3219, 3218, 3206, 3220);
	
	 SELECT DISTINCT CODTIPOPER into #TOP_PEDIDOS FROM SANKHYA.TGFTOP WHERE  CODTIPOPER = 3100;

     SELECT 
                    CAB.CODVEND,
                    CAB.CODEMP,
                    CAB.DTMOV,
                    CAB.STATUSNOTA,
                    CAB.TIPMOV,
                    CAB.PENDENTE,
                    CAB.CODTIPVENDA,
                    CAB.CODPARC,
                    CAB.NUNOTA,
					CAB.NUMNOTA,
                    CAB.DTNEG AS DTENTSAI,
                    CAB.ION_ID,
                    CAB.CODTIPOPER,
                    CAB.VLRNOTA
					into #CAB
               FROM SANKHYA.TGFCAB CAB
               INNER JOIN SANKHYA.TGFVEN VEN ON (CAB.CODVEND = VEN.CODVEND)
              WHERE CAB.DTMOV >= CONVERT(date,DATEADD(dd,-(DAY(getdate()-90)-1),getdate()-90),103)
			  --AND CAB.NUMNOTA<>0
			  AND cab.CODEMP IN (1,2,4)
              AND TIPMOV IN ('P','V','D');
              
   SELECT TGFITE.VLRTOT,
                    TGFITE.VLRDESC,
                    TGFITE.VLRREPRED,
                    TGFITE.VLRSUBST,
                    TGFITE.VLRIPI,
                    TGFITE.VLRCOM,
                    TGFITE.CODPROD,
                    TGFITE.NUNOTA,
                    TGFITE.QTDVOL,
                    TGFITE.QTDNEG,
                    CAB.CODEMP,
                    CAB.CODVEND,
                    CAB.DTENTSAI,
                    CAB.TIPMOV,
                    CAB.STATUSNOTA,
                    CAB.CODTIPOPER,
					CAB.CODPARC,
					CAB.DTMOV,
					CAB.ION_ID
					into #CAB_ITE
               FROM #CAB cab
               INNER JOIN SANKHYA.TGFITE ON TGFITE.NUNOTA = CAB.NUNOTA;

      CREATE NONCLUSTERED INDEX #CAB_ITE_1
ON [dbo].[#CAB_ITE] ([STATUSNOTA],[TIPMOV])
INCLUDE ([CODPROD],[CODEMP],[CODVEND],[DTENTSAI],[CODTIPOPER])

CREATE NONCLUSTERED INDEX #CAB_ITE_2
ON [dbo].[#CAB_ITE] ([STATUSNOTA],[CODTIPOPER],[TIPMOV])
INCLUDE ([CODPROD],[CODEMP],[CODVEND],[DTENTSAI]);


               
      SELECT DTINICIO,
                      CODVEND,
                      CODEMP,
                      DATA,
                      COUNT (CODPROD)              AS MIX_DELTA,
                      SUM (COUNT (CODPROD))
                          OVER (PARTITION BY CODVEND, CODEMP, DTINICIO
                                ORDER BY DATA)    AS MIX_POSITIVADO
								into #MIX_PRODUTOS
                 FROM (  SELECT CODVEND,
                                CODEMP,
                                CODPROD,
                                CONVERT(date,DATEADD(dd,-(DAY(DTENTSAI)-1),DTENTSAI),103)     AS DTINICIO,
                                MIN (DTENTSAI)             AS DATA
                           FROM #CAB_ITE as CAB_ITE
                           INNER JOIN #TOP_VENDA as top_venda ON TOP_VENDA.CODTIPOPER = CAB_ITE.CODTIPOPER
                          WHERE TIPMOV IN ('P', 'V') AND STATUSNOTA = 'L'
                       GROUP BY CONVERT(date,DATEADD(dd,-(DAY(DTENTSAI)-1),DTENTSAI),103),
                                CODVEND,
                                CODEMP,
                                CODPROD
                       ) X
             GROUP BY DTINICIO,
                      CODVEND,
                      CODEMP,
                      DATA;

CREATE NONCLUSTERED INDEX #CAB_1
ON [dbo].[#CAB] ([STATUSNOTA],[TIPMOV])
INCLUDE ([CODVEND],[CODEMP],[CODPARC],[DTENTSAI],[CODTIPOPER]);

CREATE NONCLUSTERED INDEX #CAB_2
ON [dbo].[#CAB] ([STATUSNOTA],[TIPMOV],[CODTIPOPER])
INCLUDE ([CODVEND],[CODEMP],[CODPARC],[DTENTSAI]);
             
SELECT DTINICIO,
                      CODVEND,
                      CODEMP,
                      DATA,
                      COUNT (CODPARC)              AS DELTA,
                      SUM (COUNT (codparc))
                          OVER (PARTITION BY CODVEND, CODEMP, DTINICIO
                                ORDER BY DATA)    AS CLIENTES_POSITIVADOS
into #CLIENTES_POSITIVADOS_DELTA
                 FROM (  SELECT CODVEND,
                                CODEMP,
                                CODPARC,
                                CONVERT(date,DATEADD(dd,-(DAY(DTENTSAI)-1),DTENTSAI),103)     AS DTINICIO,
                                MIN (DTENTSAI)             AS DATA
                           FROM #CAB as cab
                          INNER JOIN #TOP_VENDA as TOP_VENDA ON TOP_VENDA.CODTIPOPER = CAB.CODTIPOPER
                          WHERE TIPMOV IN ('V') AND STATUSNOTA = 'L'
                           GROUP BY CONVERT(date,DATEADD(dd,-(DAY(DTENTSAI)-1),DTENTSAI),103),
                                CAB.CODVEND,
                                CAB.CODEMP,
                                CAB.CODPARC
                       ) X
             GROUP BY DTINICIO,
                      CODVEND,
                      CODEMP,
                      DATA;

		SELECT
			  CODVEND,
			  APELIDO,
			  DATA,
			  VIEW_FILIAIS.CODFILIAL AS CODEMP
			  into #Q
			 FROM
			  SANKHYA.TGFVEN, IONV_SYNC.VIEW_DATAS,IONV_SYNC.VIEW_FILIAIS
			 WHERE
			  TGFVEN.TIPVEND IN ('R', 'V', 'G') AND ATIVO = 'S'
			  AND VIEW_FILIAIS.CODFILIAL IN ('1','2');
	
CREATE NONCLUSTERED INDEX #CAB_3
ON [dbo].[#CAB] ([DTENTSAI])
INCLUDE ([CODVEND],[CODEMP],[DTMOV],[CODTIPOPER],[VLRNOTA])

CREATE NONCLUSTERED INDEX #CAB_4
ON [dbo].[#CAB] ([CODTIPOPER],[DTENTSAI])
INCLUDE ([CODVEND],[CODEMP],[DTMOV],[VLRNOTA])

	/* VL_VENDA_TRANSMITIDA */
			 SELECT
			  SUM(VALOR) AS VALOR,
			  CODEMP,
			  CODVEND,
			  DATA
			  into #A
			 FROM
			  (SELECT
				SUM(CAB.VLRNOTA)               AS VALOR,
				CAB.CODEMP,
				CAB.CODVEND,
				CAST(CAB.DTMOV AS DATETIME) AS DATA
			   FROM
				#CAB cab
				--LEFT JOIN TOP_VENDA ON TOP_VENDA.CODTIPOPER = CAB.CODTIPOPER
				INNER JOIN #TOP_PEDIDOS as TOP_PEDIDOS ON TOP_PEDIDOS.CODTIPOPER = CAB.CODTIPOPER
			   WHERE
				--CAB.NUMNOTA<>0 AND
				CAB.DTENTSAI BETWEEN CAST(DATEADD(DD, -90, GETDATE()) AS DATE) AND CAST(GETDATE() AS DATE)
			   GROUP BY
				CAB.CODEMP, CAB.CODVEND, CAST(CAB.DTMOV AS DATETIME)
			   UNION ALL
			   SELECT
				SUM(CAB.VLRNOTA)               AS VALOR,
				CAB.CODEMP,
				CAB.CODVEND,
				CAST(CAB.DTMOV AS DATETIME) AS DATA
			   FROM
				SANKHYA.TGFCAB_EXC  CAB
				INNER JOIN SANKHYA.TGFVEN VEN ON (VEN.CODVEND = CAB.CODVEND)
				INNER JOIN #TOP_VENDA T ON T.CODTIPOPER = CAB.CODTIPOPER
			   WHERE
				--CAB.NUMNOTA<>0 AND
				CAB.DTENTSAI BETWEEN CAST(DATEADD(DD, -90, GETDATE()) AS DATE) AND CAST(GETDATE() AS DATE)
				
			   GROUP BY
				CAB.CODEMP, CAB.CODVEND, CAST(CAB.DTMOV AS DATETIME)) A2
			 GROUP BY
			  CODEMP, CODVEND, DATA;
		
CREATE NONCLUSTERED INDEX #CAB_5
ON [dbo].[#CAB] ([NUMNOTA])
INCLUDE ([CODVEND],[CODEMP],[DTENTSAI],[CODTIPOPER],[VLRNOTA]);

CREATE NONCLUSTERED INDEX #CAB_6
ON [dbo].[#CAB] ([CODTIPOPER])
INCLUDE ([CODVEND],[CODEMP],[NUMNOTA],[DTENTSAI],[VLRNOTA])
		                                                                                                                                                                                                                                                                            /* VL_VENDA_FATURADA */
			 SELECT
			  SUM(CAB.VLRNOTA)               AS VALOR,
			  CAB.CODEMP,
			  CAB.CODVEND,
			  CAST(CAB.DTENTSAI AS DATETIME) AS DATA
			  into #B
			 FROM
			 #CAB cab
			 INNER JOIN #TOP_VENDA as TOP_VENDA ON TOP_VENDA.CODTIPOPER = CAB.CODTIPOPER	
			 AND CAB.NUMNOTA <> 0		 
			 GROUP BY
			  CAB.CODEMP, CAB.CODVEND, CAST(CAB.DTENTSAI AS DATETIME);
		
		SELECT
			  SUM(CAB.VLRNOTA)               AS VLDEVOLUCAO,
			  CAB.CODEMP,
			  CAB.CODVEND,
			  CAST(CAB.DTENTSAI AS DATETIME) AS DATA
			  INTO #D
			 FROM
			  SANKHYA.TGFCAB  CAB
			  INNER JOIN SANKHYA.TGFVEN VEN ON (VEN.CODVEND = CAB.CODVEND)
			 WHERE
			  CAB.STATUSNOTA = 'L' AND
			  CAB.TIPMOV = 'D' AND
			  CAB.CODTIPOPER IN (2211,2208,2206,2200,2201,3299,2299)
			  
			 GROUP BY
			  CAB.CODEMP, CAB.CODVEND, CAST(CAB.DTENTSAI AS DATETIME);
		
CREATE NONCLUSTERED INDEX #CAB_7
ON [dbo].[#CAB] ([TIPMOV],[PENDENTE])
INCLUDE ([CODVEND],[CODEMP],[DTENTSAI],[CODTIPOPER],[VLRNOTA])

CREATE NONCLUSTERED INDEX #CAB_8
ON [dbo].[#CAB] ([TIPMOV],[PENDENTE],[CODTIPOPER])
INCLUDE ([CODVEND],[CODEMP],[DTENTSAI],[VLRNOTA])
		                                                                                                                                                                                                                                                                        /* VL_VENDA_NAO_FATURADA */
			 SELECT
			  SUM(CAB.VLRNOTA)               AS VALOR,
			  CAB.CODEMP,
			  CAB.CODVEND,
			  CAST(CAB.DTENTSAI AS DATETIME) AS DATA
			  INTO #E
			 FROM
			 #CAB CAB
			 INNER JOIN #TOP_PEDIDOS AS TOP_PEDIDOS ON TOP_PEDIDOS.CODTIPOPER = CAB.CODTIPOPER
			 WHERE
	CAB.PENDENTE = 'S'
	AND CAB.TIPMOV = 'P'
			 GROUP BY
			  CAB.CODEMP, CAB.CODVEND, CAST(CAB.DTENTSAI AS DATETIME);
		

CREATE NONCLUSTERED INDEX #CAB_9
ON [dbo].[#CAB] ([TIPMOV],[CODTIPOPER],[STATUSNOTA],[DTENTSAI])
INCLUDE ([CODVEND],[CODEMP],[NUNOTA],[VLRNOTA])
			
		   /* VL_VENDA_BLOQUEADA */
			SELECT
			  SUM(CAB.VLRNOTA)               AS VALOR,
			  CAB.CODEMP,
			  CAB.CODVEND,
			  CAST(CAB.DTENTSAI AS DATETIME) AS DATA
			  INTO #F
			 FROM 	  
			  #CAB CAB
			  INNER JOIN #TOP_PEDIDOS AS TOP_PEDIDOS ON TOP_PEDIDOS.CODTIPOPER = CAB.CODTIPOPER
			 WHERE

			  (CAB.STATUSNOTA = 'A' OR CAB.STATUSNOTA = 'L')
				AND CAB.TIPMOV = 'P'
			  AND CAB.DTENTSAI BETWEEN CAST(DATEADD(DD, -90, GETDATE()) AS DATE) AND CAST(GETDATE() AS DATE) 
			  AND (CAB.NUNOTA IN (SELECT NUCHAVE FROM SANKHYA.TSILIB WHERE REPROVADO = 'S'))
			 GROUP BY
			  CAB.CODEMP, CAB.CODVEND, CAST(CAB.DTENTSAI AS DATETIME);

CREATE NONCLUSTERED INDEX #CAB_10
ON [dbo].[#CAB] ([STATUSNOTA])
INCLUDE ([CODVEND],[CODEMP],[DTMOV],[CODTIPOPER])

CREATE NONCLUSTERED INDEX #CAB_11
ON [dbo].[#CAB] ([STATUSNOTA],[CODTIPOPER])
INCLUDE ([CODVEND],[CODEMP],[DTMOV])
		
		SELECT
			  COUNT(CAB.NUNOTA)       AS QTDPEDIDOS,
			  CAB.CODEMP,
			  CAB.CODVEND,
			  CAST(DTMOV AS DATETIME) AS DATA
			  INTO #G
			 FROM
			 #CAB CAB
			  INNER JOIN #TOP_VENDA AS TOP_VENDA ON TOP_VENDA.CODTIPOPER = CAB.CODTIPOPER
			 WHERE
			  CAB.STATUSNOTA = 'L' 
			 GROUP BY
			  CAB.CODVEND, CAB.CODEMP, CAST(DTMOV AS DATETIME);
		
		SELECT
			  COUNT(CAB.NUNOTA)       AS QTDPEDIDOSPRAZO,
			  CAB.CODEMP,
			  CAB.CODVEND,
			  CAST(DTNEG AS DATETIME) AS DATA
			  INTO #H
			 FROM
			  SANKHYA.TGFCAB   CAB
			  INNER JOIN #TOP_VENDA AS TOP_VENDA ON TOP_VENDA.CODTIPOPER = CAB.CODTIPOPER
			  INNER JOIN SANKHYA.TGFTPV TPV ON CAB.CODTIPVENDA = TPV.CODTIPVENDA AND CAB.DHTIPVENDA = TPV.DHALTER
			 WHERE
			  CAB.STATUSNOTA = 'L' AND dtneg BETWEEN CAST(DATEADD(DD, -90, GETDATE()) AS DATE) AND CAST(GETDATE() AS DATE) --AND TPV.SUBTIPOVENDA = 2 AND CAB.CODTIPOPER IN (1001)
			 GROUP BY
			  CAB.CODVEND, CAB.CODEMP, CAST(DTNEG AS DATETIME);

CREATE NONCLUSTERED INDEX #CAB_ITE_3
ON [dbo].[#CAB_ITE] ([STATUSNOTA],[ION_ID],[DTMOV])
INCLUDE ([VLRTOT],[VLRDESC],[CODEMP],[CODVEND],[CODTIPOPER],[CODPARC]);

CREATE NONCLUSTERED INDEX #CAB_ITE_4
ON [dbo].[#CAB_ITE] ([STATUSNOTA],[CODTIPOPER],[ION_ID],[DTMOV])
INCLUDE ([VLRTOT],[VLRDESC],[CODEMP],[CODVEND],[CODPARC])

		SELECT
			  SUM((  CAB_ITE.VLRTOT
				   - CAB_ITE.VLRDESC))
				  AS VALOR,
			  CAB_ITE.CODEMP,
			  CAB_ITE.CODVEND,
			  CAST(CAB_ITE.DTMOV AS DATETIME)
				  AS DATA
				  INTO #I
			 FROM
			  #CAB_ITE AS CAB_ITE
			  INNER JOIN SANKHYA.TGFPAR PAR ON (PAR.CODPARC = CAB_ITE.CODPARC)
			  INNER JOIN #TOP_VENDA AS TOP_VENDA ON TOP_VENDA.CODTIPOPER = CAB_ITE.CODTIPOPER
			 WHERE
			  CAB_ITE.STATUSNOTA = 'L' AND CAB_ITE.DTMOV BETWEEN CAST(DATEADD(DD, -90, GETDATE()) AS DATE) AND CAST(GETDATE() AS DATE) --AND CAB.CODUSUINC <> 363 AND CAB.CODTIPOPER IN (1001)
			  AND CAB_ITE.ION_ID IS NULL
			 GROUP BY
			  CAB_ITE.CODVEND, CAB_ITE.CODEMP, CAST(DTMOV AS DATETIME);
		
		
			SELECT
			  SUM((ITE.QTDNEG * PRO.PESOLIQ)) AS PESO,
			  SUM((ITE.QTDNEG * PRO.M3)) AS M3,
			  CAB.CODEMP,
			  CAB.CODVEND,
			  CAST(DTNEG AS DATETIME)         AS DATA
			  INTO #J
			 FROM
			  SANKHYA.TGFCAB  CAB
			  INNER JOIN SANKHYA.TGFITE ITE ON (CAB.NUNOTA = ITE.NUNOTA)
			  INNER JOIN SANKHYA.TGFPRO PRO ON (ITE.CODPROD = PRO.CODPROD)
			 WHERE
			  CAB.STATUSNOTA = 'L' AND dtneg BETWEEN CAST(DATEADD(DD, -90, GETDATE()) AS DATE) AND CAST(GETDATE() AS DATE) --AND CAB.CODTIPOPER IN (1001)
			 GROUP BY
			  CAB.CODVEND, CAB.CODEMP, CAST(DTNEG AS DATETIME);


	INSERT INTO ionv_sync.IONV_VENDEDOR_PERFORMACE		  
	SELECT
	 DISTINCT CAST(Q.CODVEND AS NUMERIC)                            AS CODVENDEDOR,
			  CAST(Q.CODEMP AS VARCHAR(3))                          AS CODFILIAL,
			  CAST(Q.DATA AS DATETIME)                              AS DATA,
			  ROUND(COALESCE(A.VALOR, 0), 2)       AS VL_VENDA_TRANSMITIDA,
			  ROUND(COALESCE(B.VALOR, 0), 2)       AS VL_VENDA_FATURADA,
			  ROUND(COALESCE(B.VALOR, 0), 2)       AS VL_VENDA_TABELA,
			  0                                                     AS VL_VENDA_CUSTO,
			  ROUND(COALESCE(D.VLDEVOLUCAO, 0), 2) AS VL_DEVOLUCAO,
			  0                                                     AS VL_COMISSAO,
			  0                                                     AS VL_ST,
			  0                                                     AS VL_IPI,
			  0                                                     AS VL_OUTROS,
			  ROUND(COALESCE(A.VALOR, 0), 2) - ROUND(COALESCE(B.VALOR, 0), 2)   AS VL_VENDA_NAO_FATURADA,
			  ROUND(COALESCE(F.VALOR, 0), 2)       AS VL_VENDA_BLOQUEADA,
			  COALESCE(CLIENTES_POSITIVADOS_DELTA.CLIENTES_POSITIVADOS,0)             AS CLIENTES_POSITIVADOS,
			  COALESCE(CLIENTES_POSITIVADOS_DELTA.DELTA,0)   AS CLIENTES_POSITIVADOS_DELTA,
			  COALESCE(MIX_PRODUTOS.MIX_POSITIVADO,0)              AS MIX_POSITIVADO,
			  COALESCE(MIX_PRODUTOS.MIX_DELTA,0) AS MIX_POSITIVADO_DELTA,
			  COALESCE(G.QTDPEDIDOS, 0)            AS TOTAL_PEDIDOS,
			  COALESCE(H.QTDPEDIDOSPRAZO, 0)       AS TOTAL_PEDIDOS_PRAZO,
			  ROUND(COALESCE(I.VALOR, 0), 2)       AS VL_VENDA_CALLCENTER,
			  ROUND(COALESCE(J.PESO, 0), 2)        AS PESO,
			  ROUND(COALESCE(J.M3, 0), 6)          AS VOLUME,
			  0                                                     AS PERC_LUCRATIVIDADE
	FROM
	 #Q AS Q
	 LEFT JOIN #A AS A ON Q.CODVEND = A.CODVEND AND Q.DATA = A.DATA AND Q.CODEMP = A.CODEMP
	 LEFT JOIN #B AS B ON Q.CODVEND = B.CODVEND AND Q.DATA = B.DATA AND Q.CODEMP = B.CODEMP
	 LEFT JOIN #D AS D ON Q.CODVEND = D.CODVEND AND Q.DATA = D.DATA AND Q.CODEMP = D.CODEMP
	 LEFT JOIN #E AS E ON Q.CODVEND = E.CODVEND AND Q.DATA = E.DATA AND Q.CODEMP = E.CODEMP
	 LEFT JOIN #F AS F ON Q.CODVEND = F.CODVEND AND Q.DATA = F.DATA AND Q.CODEMP = F.CODEMP
	 LEFT JOIN #G AS G ON Q.CODVEND = G.CODVEND AND Q.DATA = G.DATA AND Q.CODEMP = G.CODEMP
	 LEFT JOIN #H AS H ON Q.CODVEND = H.CODVEND AND Q.DATA = H.DATA AND Q.CODEMP = H.CODEMP
	 LEFT JOIN #I AS I ON Q.CODVEND = I.CODVEND AND Q.DATA = I.DATA AND Q.CODEMP = I.CODEMP
	 LEFT JOIN #J AS J ON Q.CODVEND = J.CODVEND AND Q.DATA = J.DATA AND Q.CODEMP = J.CODEMP
	 LEFT JOIN #MIX_PRODUTOS AS MIX_PRODUTOS ON MIX_PRODUTOS.CODVEND = Q.CODVEND AND MIX_PRODUTOS.DATA = Q.DATA AND MIX_PRODUTOS.CODEMP = Q.CODEMP
	 LEFT JOIN #CLIENTES_POSITIVADOS_DELTA AS CLIENTES_POSITIVADOS_DELTA ON CLIENTES_POSITIVADOS_DELTA.CODVEND = Q.CODVEND AND CLIENTES_POSITIVADOS_DELTA.DATA = Q.DATA AND CLIENTES_POSITIVADOS_DELTA.CODEMP = Q.CODEMP
	WHERE
	 (  COALESCE(A.VALOR, 0)
	  + COALESCE(B.VALOR, 0)
	  + COALESCE(D.VLDEVOLUCAO, 0)
	  + COALESCE(F.VALOR, 0)
	  + COALESCE(G.QTDPEDIDOS, 0)
	  + COALESCE(H.QTDPEDIDOSPRAZO, 0)
	  + COALESCE(I.VALOR, 0)
	  + COALESCE(J.PESO, 0)
	  + COALESCE(J.M3, 0)) > 0
	--  order by 1,2,3;
 

	  DROP TABLE #A, #B, #CAB, #CAB_ITE, #CLIENTES_POSITIVADOS_DELTA, #D, #E, #F, #G, #H, #I, #J, #MIX_PRODUTOS, #Q, #TOP_PEDIDOS, #TOP_VENDA;